<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prologue on</title><link>https://kubedl.io/docs/prologue/</link><description>Recent content in Prologue on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://kubedl.io/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://kubedl.io/docs/prologue/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://kubedl.io/docs/prologue/introduction/</guid><description>Currently, KubeDL supports running TensorFlow, PyTorch, XGBoost, Mars and MPI distributed training jobs on Kubernetes.
Introduction Key Features Support different kinds of deep learning training jobs in a single controller. You don&amp;rsquo;t need to run each controller for each job kind. Expose unified prometheus metrics for job stats. Persist job metadata and events in external storage such as Mysql or certain event DB to outlive api-server state.</description></item><item><title>Install Using Helm</title><link>https://kubedl.io/docs/prologue/install-using-helm/</link><pubDate>Mon, 29 Mar 2021 16:47:24 -0700</pubDate><guid>https://kubedl.io/docs/prologue/install-using-helm/</guid><description>Install Helm Helm is a package manager for Kubernetes. You can install helm with command below on MacOS
brew install helm Check the helm website for more details.
Install KubeDL From the root directory, run
helm install kubedl ./helm/kubedl --create-namespace -n kubedl-system Running the command from master branch uses the daily docker image.
You can override default values defined in values.yaml with --set flag. For example, set the custom cpu/memory resource:</description></item><item><title>Install Using Yaml</title><link>https://kubedl.io/docs/prologue/install-using-yaml/</link><pubDate>Tue, 30 Mar 2021 17:46:36 -0700</pubDate><guid>https://kubedl.io/docs/prologue/install-using-yaml/</guid><description>Install CRDs From project root directory, run
kubectl apply -f config/crd/bases/ Install KubeDL controller A single yaml file including everything: deployment, rbac etc.
kubectl apply -f https://raw.githubusercontent.com/kubedl-io/kubedl/master/config/manager/all_in_one.yaml KubeDL controller is installed under kubedl-system namespace.
Running the command from master branch uses the daily docker image.
Install the KubeDL Dashboard kubectl apply -f https://raw.githubusercontent.com/kubedl-io/kubedl/master/console/dashboard.yaml The dashboard will list nodes. Hence, its service account requires the list node permission. Check the dashboard.</description></item><item><title>Quick Start</title><link>https://kubedl.io/docs/prologue/quick-start/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://kubedl.io/docs/prologue/quick-start/</guid><description>Submit the TensorFlow job kubectl apply -f https://raw.githubusercontent.com/kubedl-io/kubedl/master/example/tf/tf_job_mnist_distributed_simple.yaml List jobs kubectl get tfjobs NAME STATE AGE TTL-AFTER-FINISHED MAX-LIFETIME MODEL-VERSION tf-distributed-simple Running 24s Get job status kubectl describe tfjob tf-distributed-simple Delete the job kubectl delete tfjob tf-distributed-simple All supported workload kinds Workload kinds â†’</description></item><item><title>Workload Kinds</title><link>https://kubedl.io/docs/prologue/workloadkinds/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://kubedl.io/docs/prologue/workloadkinds/</guid><description>You can substitute the kind in kubectl command with below kinds.
Training Job kind tfjob pytorchjob marsjob mpijob xgboostjob cron: a cron controller for periodically scheduling training jobs. xdljob elasticdljob Model model mv (short for modelversion) Serving inference</description></item></channel></rss>
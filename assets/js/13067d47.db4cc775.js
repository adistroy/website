"use strict";(self.webpackChunkkubedl_website=self.webpackChunkkubedl_website||[]).push([[9336],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,h=m["".concat(c,".").concat(d)]||m[d]||s[d]||o;return t?n.createElement(h,l(l({ref:r},p),{},{components:t})):n.createElement(h,l({ref:r},p))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3136:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={sidebar_position:8},c="Developer Guide",u={unversionedId:"morphling/developer-guide",id:"morphling/developer-guide",title:"Developer Guide",description:"There's a Makefile in the root folder which describes the options to build and install. Here are some common ones:",source:"@site/docs/morphling/developer-guide.md",sourceDirName:"morphling",slug:"/morphling/developer-guide",permalink:"/docs/morphling/developer-guide",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/morphling/developer-guide.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Morphling UI",permalink:"/docs/morphling/ui"},next:{title:"Startup flags",permalink:"/docs/morphling/flags"}},p=[{value:"Build the controller manager binary",id:"build-the-controller-manager-binary",children:[],level:2},{value:"Run the tests",id:"run-the-tests",children:[],level:2},{value:"Generate manifests, e.g., CRD YAML.",id:"generate-manifests-eg-crd-yaml",children:[],level:2},{value:"Build Morphling component images.",id:"build-morphling-component-images",children:[],level:2},{value:"Push Morphling component images.",id:"push-morphling-component-images",children:[],level:2},{value:"Generate the helm chart",id:"generate-the-helm-chart",children:[],level:2}],s={toc:p};function m(e){var r=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"developer-guide"},"Developer Guide"),(0,o.kt)("p",null,"There's a ",(0,o.kt)("inlineCode",{parentName:"p"},"Makefile")," in the root folder which describes the options to build and install. Here are some common ones:"),(0,o.kt)("h2",{id:"build-the-controller-manager-binary"},"Build the controller manager binary"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make manager\n")),(0,o.kt)("h2",{id:"run-the-tests"},"Run the tests"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make test\n")),(0,o.kt)("h2",{id:"generate-manifests-eg-crd-yaml"},"Generate manifests, e.g., CRD YAML."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make manifests\n")),(0,o.kt)("h2",{id:"build-morphling-component-images"},"Build Morphling component images."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make docker-build\n")),(0,o.kt)("h2",{id:"push-morphling-component-images"},"Push Morphling component images."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make docker-push\n")),(0,o.kt)("h2",{id:"generate-the-helm-chart"},"Generate the helm chart"),(0,o.kt)("p",null,"Generate the helm chart, the helm chart will be generated under ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubedl-io/morphling/tree/main/helm/morphling"},"helm/morphling")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make helm-chart\n")),(0,o.kt)("p",null,"To develop/debug Morphling controller manager locally, please check the ","[Debug Guide]",'({{< ref "debug-guide" >}}).'))}m.isMDXComponent=!0}}]);
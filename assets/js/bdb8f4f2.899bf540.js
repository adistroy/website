"use strict";(self.webpackChunkkubedl_website=self.webpackChunkkubedl_website||[]).push([[9450],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6288:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:5},c="Backing Storage",l={unversionedId:"model/storage",id:"model/storage",title:"Backing Storage",description:"KubeDL Model supports different backend storage for generating the model image using Kaniko.",source:"@site/docs/model/storage.md",sourceDirName:"model",slug:"/model/storage",permalink:"/docs/model/storage",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model/storage.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/docs/model/usage"},next:{title:"Introduction",permalink:"/docs/serving/intro"}},u=[{value:"Local Storage",id:"local-storage",children:[],level:3},{value:"NFS",id:"nfs",children:[],level:3}],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"backing-storage"},"Backing Storage"),(0,a.kt)("p",null,"KubeDL Model supports different backend storage for generating the model image using Kaniko.\nCheck the full spec ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubedl-io/kubedl/blob/master/apis/model/v1alpha1/modelversion_types.go#L72"},"here.")),(0,a.kt)("h3",{id:"local-storage"},"Local Storage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// LocalStorage defines the local host path for storing the model artifacts.\n// For a distributed training job, the nodeName will be the node where the chief/master worker run to export the model.\ntype LocalStorage struct {\n    // The local path on the host to store the model artifacts.\n    // +required\n    Path     string `json:"path,omitempty"`\n\n    // This node where chief worker run to export the model.\n    // +required\n    NodeName string `json:"nodeName,omitempty"`\n}\n')),(0,a.kt)("h3",{id:"nfs"},"NFS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// NFS represents the NFS for storing the model artifacts.\ntype NFS struct {\n    // The server address, e.g. "***.cn-beijing.nas.aliyuncs.com"\n    Server string `json:"server,omitempty"`\n\n    // The path under which the model is stored, e.g. /models/my_model1\n    Path   string `json:"path,omitempty"`\n}\n')))}d.isMDXComponent=!0}}]);
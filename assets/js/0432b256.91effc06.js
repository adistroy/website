"use strict";(self.webpackChunkkubedl_website=self.webpackChunkkubedl_website||[]).push([[7207],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),g=i,d=m["".concat(u,".").concat(g)]||m[g]||s[g]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},577:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:4},u="Quick Start",c={unversionedId:"morphling/quick-start",id:"morphling/quick-start",title:"Quick Start",description:"This example demonstrates how to tune the configuration for a Mobilenet model deployed with Tensorflow Serving under Morphling.",source:"@site/docs/morphling/quick-start.md",sourceDirName:"morphling",slug:"/morphling/quick-start",permalink:"/docs/morphling/quick-start",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/morphling/quick-start.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Install Using YAMLs",permalink:"/docs/morphling/install-using-yaml"},next:{title:"Tutorial",permalink:"/docs/morphling/tutorial"}},p=[{value:"Submit the configuration tuning experiment",id:"submit-the-configuration-tuning-experiment",children:[],level:4},{value:"Monitor the tuning experiment status",id:"monitor-the-tuning-experiment-status",children:[],level:4},{value:"Monitor sampling trials (performance test)",id:"monitor-sampling-trials-performance-test",children:[],level:4},{value:"Get the searched optimal configuration",id:"get-the-searched-optimal-configuration",children:[],level:4},{value:"Delete the tuning experiment",id:"delete-the-tuning-experiment",children:[],level:4}],s={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"This example demonstrates how to tune the configuration for a ",(0,o.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/api_docs/python/tf/keras/applications/mobilenet"},"Mobilenet")," model deployed with ",(0,o.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/guide/serving"},"Tensorflow Serving")," under Morphling."),(0,o.kt)("p",null,"For demonstration, we choose ",(0,o.kt)("em",{parentName:"p"},"two")," configurations to tune:\nthe first one the CPU cores (resource allocation), and the second one is maximum serving batch size (runtime parameter).\nWe use grid search for configuration sampling."),(0,o.kt)("h4",{id:"submit-the-configuration-tuning-experiment"},"Submit the configuration tuning experiment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/alibaba/morphling/main/examples/experiment/experiment-mobilenet-grid.yaml\n")),(0,o.kt)("h4",{id:"monitor-the-tuning-experiment-status"},"Monitor the tuning experiment status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pe\nkubectl describe pe\n")),(0,o.kt)("h4",{id:"monitor-sampling-trials-performance-test"},"Monitor sampling trials (performance test)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get trial\n")),(0,o.kt)("h4",{id:"get-the-searched-optimal-configuration"},"Get the searched optimal configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pe\n")),(0,o.kt)("p",null,"Expected output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                        STATE       AGE     OBJECT NAME   OPTIMAL OBJECT VALUE   OPTIMAL PARAMETERS\nmobilenet-experiment-grid   Succeeded   5m59s   qps           31                     [map[category:env name:BATCH_SIZE value:2] map[category:resource name:cpu value:2000m] map[category:resource name:memory value:2000Mi]]\n")),(0,o.kt)("h4",{id:"delete-the-tuning-experiment"},"Delete the tuning experiment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete pe --all\n")))}m.isMDXComponent=!0}}]);
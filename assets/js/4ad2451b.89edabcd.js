"use strict";(self.webpackChunkkubedl_website=self.webpackChunkkubedl_website||[]).push([[4894],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2294:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:3},s="Design",c={unversionedId:"model/design",id:"model/design",title:"Design",description:"This diagram illustrates the workflow from model generation to model deployment.",source:"@site/docs/model/design.md",sourceDirName:"model",slug:"/model/design",permalink:"/docs/model/design",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model/design.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/docs/model/setup"},next:{title:"Quick Start",permalink:"/docs/model/usage"}},d=[],u={toc:d};function p(e){var t=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"design"},"Design"),(0,a.kt)("p",null,"This diagram illustrates the workflow from model generation to model deployment."),(0,a.kt)("p",null,"In short, KubeDL training or user generates the KubeDL model and can then later by referenced by KubeDL Serving to serve the model directly."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"modedesign",src:r(2756).Z,width:"1093",height:"368"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A ModelVersion CR can be generated by a user manually or programmatically by a training job. KubeDL training jobs (Tensorflow and Pytorch)\nalready integrates this. Check the CRD spec for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alibaba/kubedl/blob/master/apis/training/v1alpha1/tfjob_types.go#L53"},"Tensorflow Job")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alibaba/kubedl/blob/master/apis/training/v1alpha1/pytorchjob_types.go#L46"},"Pytorch Job."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The ModelVersion Controller watches the ModelVersion CR and does the following steps:"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Create a Model CR, if not existing, and associate it with the corresponding ModelVersion CR. The Model CR serves as the parent for grouping the underneath ModelVersions"),(0,a.kt)("li",{parentName:"ol"},"Create the PV and PVC for the backend model storage where the actual model artifacts are exported by the training job or manually specified by the user."),(0,a.kt)("li",{parentName:"ol"},"Create a Kaniko pod mounted with previous PVC for the model. The Kaniko pod generates a docker image that incorporates the model artifacts and push to the dockerhub. The model artifacts will be preset at a pre-defined location ",(0,a.kt)("inlineCode",{parentName:"li"},"/kubedl-model")," inside the container.")))))}p.isMDXComponent=!0},2756:function(e,t,r){t.Z=r.p+"assets/images/design-8b56e44e5ef581a66efa76e11b0126cd.png"}}]);